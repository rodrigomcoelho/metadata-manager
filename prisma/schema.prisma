generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(uuid())
  name           String
  email          String  @unique
  hashedPassword String
  slackId        String
  group          Group?  @relation(fields: [groupId], references: [id])
  groupId        String?
  isActive       Boolean @default(true)
}

model Group {
  id          String  @id @default(uuid())
  description String
  email       String?
  slackId     String?
  users       User[]
  isActive    Boolean @default(true)
}

model BusinessUnit {
  id        String   @id @default(uuid())
  code      String
  name      String
  createdAt DateTime @default(now())
}

model Contract {
  id                 String          @id @default(uuid())
  externalId         String          @unique
  dataOwner          String
  dataOwnerEmail     String
  dataCustodianEmail String
  ingestionMethod    String
  cronScheduler      String
  tags               String?
  sourceFormat       String
  isActive           Boolean         @default(true)
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  contractField      ContractField[]
}

model ContractField {
  id                     String          @id @default(uuid())
  contractId             String
  contract               Contract        @relation(fields: [contractId], references: [id])
  fieldName              String
  fieldType              String
  fieldMode              String
  fieldDescription       String
  fieldParentId          String?
  contractFields         ContractField?  @relation("ContractFields", fields: [fieldParentId], references: [id])
  contractChildrenFields ContractField[] @relation("ContractFields")
  createdAt              DateTime        @default(now())
  updatedAt              DateTime        @updatedAt

  @@index([contractId])
}
